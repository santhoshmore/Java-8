spring.profiles.include=application-local.properties, application-QA.properties, application-staging.properties, application-prod.properties
spring.profiles.active=QA

#application context path
server.context-path=/ReibrsmntSvc
server.port=8080

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect

# = Logging

# Specify the level for spring boot and hibernate's loggers
logging.level.com.marlabs.rmbs = DEBUG
logging.level.org.hibernate = ERROR

# Log file location (in addition to the console)
logging.file = erslogger.log

#File save location

#file.location=/var/lib/ers/policydocs/

file.location=/var/lib/tomcat/policydocs/







